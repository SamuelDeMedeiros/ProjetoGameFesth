@using ProjetoE_CommerceGameFesth.Models
@model IEnumerable<ProjetoE_CommerceGameFesth.Models.Funcionario>
@{
    ViewData["Title"] = "Funcionarios";
    int cont = 0;
}
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

<style>
    body {
        font-family: 'Poppins', sans-serif;
    }

    .search-container {
        display: flex;
        align-items: center;   
        justify-content:center;
        margin-top:25px    
    }

        .search-container label {
            margin-right: 10px;
            font-weight: bold;
            color: #333;
            text-align:center;
        }

        .search-container .form-check-label {
            margin-right: 10px;
            cursor: pointer;
        }

        .search-container input[type="radio"] {
            margin-right: 5px;
        }

        .search-container select {
            padding: 10px;
            border-radius: 4px;
            border: 1px solid #ddd;
            margin-right: 10px;
            flex-grow: 1; /* Faz o select crescer para preencher o espaço disponível */
        }

    h4 {
        margin-top: 40px;
        text-align: center;
        color: dimgray;
        font-weight: bold;
        text-decoration: inherit;
    }

    .button {
        display: flex;
        justify-content: center;
        gap: 10px;
        margin-top: 30px;
    }
    /* Estilo para a tabela */
    .table th,
    .table td {
        padding: 0.75rem;
        vertical-align: top;
        border-top: 1px solid #dee2e6;
    }

    .table thead th {
        vertical-align: bottom;
        border-bottom: 2px solid #dee2e6;
    }

    .table tbody + tbody {
        border-top: 2px solid #dee2e6;
    }

    .table .thead-dark th {
        color: #fff;
        background-color: dodgerblue;
        border-color: dodgerblue;
    }

    .table-bordered {
        margin-top: 15px;
        border: 1px solid #dee2e6;
    }

        .table-bordered:hover {
            color: darkgray;
        }

        .table-bordered th,
        .table-bordered td {
            border: 1px solid;
            color: black;
            border-color: dodgerblue;
        }

    /* Estilo para os botões */
    .btn-primary {
        background-color:;
        border-color: dodgerblue;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .pesquisa {
        display: flex;
        justify-content: center;
    }
</style>


<div class="button">
    <a class="btn btn-outline-info" asp-action="DesativadosF">Funcionarios desativados</a><a class="btn btn-outline-info" asp-action="Cadastrar">Clique aqui para Cadastrar</a>
</div>


<div class="search-container">
    @using (Html.BeginForm("Index", "Funcionario", FormMethod.Get))
    {
        <label>
            <input class="form-check-label" type="radio" name="por" value="Por Maior" checked>
            Cres
        </label>
        <label>
            <input class="form-check-label" type="radio" name="por" value="Por Menor">
            Descr
        </label>
        <select name="campo">
            <option value="Id">Id</option>
            <option value="Nome">Nome</option>
            <option value="Nascimento">Data de aniversario</option>
        </select>
        <button type="submit" class="btn btn-outline-primary">Pesquisar</button>
    }
</div>

<div class="table-responsive">
    <table class="table table-bordered">
        @foreach (Funcionario funcionario in Model)
        {
            @if (@funcionario.Situacao == "A")
            {
                cont++;
            }
        }
        @if (ViewBag.Funci == "V" || cont == 0)
        {
            <br />
            <h2>Esta lista está vazia</h2>
        }
        else
        {
            <thead class="thead-dark">
                <tr>
                    <th scope="col">@Html.DisplayNameFor(model => model.First().IdFuncionario)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.First().NomeFuncionario)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.First().DataAdmissao)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.First().Telefone)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.First().Tipo)</th>
                    <th scope="col">Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (Funcionario funcionario in Model)
                {
                    @if (@funcionario.Situacao == "A" && funcionario.IdFuncionario != ViewBag.Funcionario)
                    {
                        <tr>
                            <th scope="row">@funcionario.IdFuncionario</th>
                            <td>@funcionario.NomeFuncionario</td>
                            <td>@funcionario.DataAdmissao.ToString("yyyy/MM/dd")</td>
                            <td>@funcionario.Telefone</td>
                            @if (@funcionario.Tipo != "F")
                            {
                                @if (@funcionario.IdFuncionario == 1)
                                {
                                    <td>Gerente</td>
                                }
                                else
                                {
                                    <td>Subgerente</td>
                                }
                            }
                            else
                            {
                                <td>Comum</td>
                            }
                            <td>
                                <a class="btn btn-outline-primary" asp-route-id="@funcionario.IdFuncionario" asp-area="Funcionario" asp-controller="Funcionario" asp-action="DetalhesFunc">Detalhes</a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        }
    </table>
</div>


